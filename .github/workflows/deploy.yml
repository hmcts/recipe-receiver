name: Deploy to AKS sds-dev-01
on:
  pull_request:
    paths:
      - 'main.go'
      - 'pkg/**'
      - 'charts/**'
      - 'scripts/*'
env:
  REGISTRY_NAME: hmctspublic
  CLUSTER_NAME: ss-dev-01-aks
  CLUSTER_RESOURCE_GROUP: ss-dev-01-rg
  APP_NAME: recipe-receiver
  SERVICE_BUS: toffee-servicebus-stg
  SB_RESOURCE_GROUP: toffee-shared-infrastructure-stg
  SUBSCRIPTION: 74dacd4f-a248-45bb-a2f0-af700dc4cf68
  KUBE_NAMESPACE: toffee
  QUEUE_NAME: recipes-pr${{ github.event.number }}

jobs:
  buildAndDeploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Go fmt
        run: go fmt
        env:
          GOOS: darwin
          GOARCH: amd64

      # Build recipe-receiver app
      - name: Build
        run: go build -v .
        env:
          GOOS: linux
          GOARCH: amd64

      # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Container build and push to an Azure Container Registry (ACR)
      - run: |
          ./scripts/docker.sh pr-${{ github.event.number }}
        shell: bash

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      # Generate manifest using helm chart
      - uses: azure/k8s-bake@v2.2
        with:
          renderEngine: "helm"
          helmChart: "./charts/recipe-receiver/"
          releaseName: recipe-receiver-pr${{ github.event.number }}
          helm-version: "v3.9.0"
          overrides: |
            function.image:${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:pr-${{ github.event.number }}
            function.environment.QUEUE:${{ env.QUEUE_NAME }}
            function.triggers[0].type:azure-servicebus
            function.triggers[0].namespace:${{ env.SERVICE_BUS }}
            function.triggers[0].queueName:${{ env.QUEUE_NAME }}
            function.triggers[0].queueLength:5
        id: bake

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Create queue and fill it with messages
      - name: Create queue
        run: |
          ./scripts/create-queue.sh ${{ env.QUEUE_NAME }}
        shell: bash

      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          namespace: ${{ env.KUBE_NAMESPACE }}

      # Wait for message count to reach 0
      - name: Watch queue
        run: |
          ./scripts/watch-queue.sh ${{ env.QUEUE_NAME }}
        shell: bash

      # Container build and push to an Azure Container Registry (ACR)
      - run: |
          ./scripts/docker.sh prod
        shell: bash
        if: ${{ success() }}