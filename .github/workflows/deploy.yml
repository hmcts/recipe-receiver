name: Deploy to AKS sds-dev-01
on:
  pull_request:
    paths:
      - 'main.go'
      - 'pkg/**'
env:
  REGISTRY_NAME: hmctspublic
  CLUSTER_NAME: ss-dev-01-aks
  CLUSTER_RESOURCE_GROUP: ss-dev-01-rg
  APP_NAME: recipe-receiver
  NAMESPACE: toffee
  QUEUE_NAME: recipes-$env:GITHUB_REF_NAME
  QUEUE_NAMESPACE: sds-keda-stg-01

jobs:
  buildAndDeploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build
        run: go build -v .
        env:
          GOOS: linux
          GOARCH: amd64

      # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Container build and push to a Azure Container Registry (ACR)
      - run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
        working-directory: ./

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      - uses: azure/k8s-bake@v2.2
        with:
          renderEngine: "helm"
          helmChart: "./charts/recipe-receiver/"
          releaseName: recipe-receiver
          helm-version: "v3.9.0"
          overrides: |
            function.image:${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
            function.environment.QUEUE=${{ env.QUEUE_NAME }}
            function.triggers[0].type=azure-servicebus
            function.triggers[0].namespace=${{ env.QUEUE_NAMESPACE }}
            function.triggers[0].queueName=${{ env.QUEUE_NAME }}
            function.triggers[0].queueLength=5
        id: bake

      - name: Run script file
        run: |
          ./scripts/queue.sh ${{ env.QUEUE_NAME }}
        shell: bash

      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          namespace: ${{ env.NAMESPACE }}