name: Deploy Keda test app

on: pull_request

env:
  # Common vars
  GITHUB_EVENT_NUMBER: ${{ github.event.number }}
  APP_NAME: recipe-receiver
  QUEUE_NAME: recipes-pr${{ github.event.number }}
  VAR_FILE_PATH: ${{ github.workspace }}/.github/workflows

permissions:
  id-token: write

jobs:
  buildAndPush:
    strategy:
      matrix:
        project: ["sds", "cft"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.18

      - name: Go fmt
        run: go fmt
        env:
          GOOS: linux
          GOARCH: amd64

      # Build recipe-receiver app
      - name: Build
        run: go build -v .
        env:
          GOOS: linux
          GOARCH: amd64

      - name: "Az CLI login"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }} # DTS Recipe Receiver testing
          tenant-id: ${{ secrets.TENANT_ID }} # HMCTS.NET
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Load ${{ matrix.project }} vars
        run: |
          cat ${VAR_FILE} >> $GITHUB_ENV
        shell: bash
        env:
          VAR_FILE: ${{ env.VAR_FILE_PATH }}/${{ matrix.project }}.env

      - name: Get ACR Token for ${{ matrix.project }}
        uses: azure/CLI@v2
        with:
          inlineScript: |
            token=$(az acr login -n ${{ env.REGISTRY_NAME }} --subscription ${{ env.REGISTRY_SUB }}  --expose-token | jq -r .accessToken)
            echo "ACR_TOKEN=$token" >> $GITHUB_ENV

      # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v2
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: 00000000-0000-0000-0000-000000000000
          password: ${{ env.ACR_TOKEN }}

      # Container build and push to an Azure Container Registry (ACR)
      - name: Build and Push PR Container Image - ${{ matrix.project }}
        run: |
          ./scripts/docker.sh pr-${{ env.GITHUB_EVENT_NUMBER }}
        shell: bash

  deploy:
    strategy:
      matrix:
        project: ["sds", "cft"]
    runs-on: ubuntu-latest
    needs: buildAndPush
    steps:
      - uses: actions/checkout@main

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.18

      # Load Project environment variables
      - name: Load ${{ matrix.project }} vars
        run: |
          cat ${VAR_FILE} >> $GITHUB_ENV
        shell: bash
        env:
          VAR_FILE: ${{ github.workspace }}/.github/workflows/${{ matrix.project }}.env

      - name: "Az CLI login"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }} # DTS Recipe Receiver testing
          tenant-id: ${{ secrets.TENANT_ID }} # HMCTS.NET
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      # Create queue and fill it with messages
      - name: Create queue
        run: |
          ./scripts/create-queue.sh ${{ env.QUEUE_NAME }}
        shell: bash

      # Deploy to AKS
      - name: Deploy to AKS
        run: |
          ./scripts/k8s.sh deploy "${{ env.GITHUB_EVENT_NUMBER }}"
        shell: bash

      # Wait for message count to reach 0
      - name: Watch queue
        run: |
          ./scripts/watch-queue.sh ${{ env.QUEUE_NAME }}
        shell: bash

      - name: Az logout
        run: |
          az logout
        shell: bash
        if: ${{ always() }}
